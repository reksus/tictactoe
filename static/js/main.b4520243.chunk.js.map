{"version":3,"sources":["index.js"],"names":["Square","value","onClick","style","width","height","border","background","color","display","justifyContent","alignItems","Board","props","gridTemplateColumns","gridGap","justifyItems","textAlign","padding","gridColumn","winner","undefined","xIsNext","Array","from","squares","map","square","i","key","Game","handleClick","n","state","history","length","slice","stepNumber","coords","isWinner","push","Math","floor","setState","revertBack","splice","fill","this","listItems","forEach","listStyle","fontWeight","marginLeft","React","Component","some","seq","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4520243.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Square({value, onClick}) {\n  return (\n    <div \n      onClick={onClick} \n      style={{width: '60px', height: '55px', border: '1px solid orangered', background: 'FAFAFA', color: 'black', display: 'inline-flex', justifyContent: 'center', alignItems: 'center'}}\n    >\n      <span>{value}</span>\n    </div>\n  )\n}\nfunction Board(props) {\n  return (\n    <div style={{display: 'inline-grid', gridTemplateColumns: '1fr 1fr 1fr', gridGap:'5px', justifyItems: 'center'}}>\n      <h2 style={{textAlign: 'center', padding: '0', gridColumn: '1 / -1'}}>\n        {props.winner \n          ? <nobr>The winner is : {props.winner}</nobr>\n          : props.winner === undefined\n            ? <nobr>No Winner !!</nobr>\n            : <nobr>Next Player : {props.xIsNext ? 'X' : 'O'}</nobr>\n        }\n      </h2>\n      {\n        Array.from(props.squares).map((square, i) => \n          <Square \n            onClick={() => props.onClick(i)}\n            key={i+1} \n            value={square}\n          />\n        )\n      }\n    </div>\n  )\n}\nclass Game extends React.Component {\n  constructor(props) {\n    super(props) \n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        xIsNext: true,\n        stepNumber: 0,\n        coords: [-1, -1]\n      }]\n    }\n  }\n  handleClick = (i) => {\n    const n = this.state.history.length\n    const history = this.state.history[n-1]\n    const squares = history.squares.slice()\n    let xIsNext = history.xIsNext\n    let stepNumber = history.stepNumber\n    let coords = history.coords\n    if (squares[i] || isWinner(squares)) {\n      return\n    } \n    squares[i] = xIsNext ? 'X' : 'O'\n    xIsNext = !xIsNext\n    this.state.history.push({\n      squares: squares, \n      xIsNext: xIsNext,\n      stepNumber: stepNumber + 1,\n      coords: [Math.floor(i/3)+1, (i%3)+1]\n    })\n    this.setState({\n      history: this.state.history\n    })\n  }\n  revertBack = (i) => {\n    const history = this.state.history.slice()\n    history.splice(i+1)\n    this.setState({history: history})\n  }\n  render() {\n    const n = this.state.history.length\n    const squares = this.state.history[n-1].squares\n    const xIsNext = this.state.history[n-1].xIsNext\n    const winner = isWinner(squares) \n      ? xIsNext \n        ? 'O' \n        : 'X'\n      : this.state.history[n-1].stepNumber === 9\n        ? undefined\n        : null\n    \n    let listItems = []\n    this.state.history.forEach((history, i) => {\n      if (i === 0) {\n        listItems.push(<p key={i}><li onClick={() => this.revertBack(i)} style={{display: 'inline-block', background: 'yellow', listStyle: 'none', fontWeight: '700'}}>Start Game</li></p>)\n      } else {\n        listItems.push(\n          <p key={i}>\n            <li \n              onClick={() => this.revertBack(i)} \n              style={{display: 'inline-block', background: 'yellow', listStyle: 'none', fontWeight: '700'}}>\n              Goto to move: #{history.stepNumber}\n            </li>\n            <span style={{marginLeft: '15px'}}><i>at coords: {history.coords[0]}, {history.coords[1]}</i></span>\n          </p>)\n      }\n    })\n    return (\n      <div>\n        <Board \n          winner={winner}\n          squares={squares}\n          xIsNext={xIsNext}\n          onClick={this.handleClick}\n        />\n        <div>\n          {listItems}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction isWinner(squares) {\n  const winSeq = [\n    [0, 1, 2], \n    [3, 4, 5], \n    [6, 7, 8], \n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ]\n  return winSeq.some(seq => {\n    const [a, b, c] = seq\n    return squares[a] && squares[a] === squares[b] && squares[a] === squares[c]\n  })\n}\n\nReactDOM.render(<Game />, document.getElementById('root'))"],"sourceRoot":""}